openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /pacientes/:
    get:
      operationId: pacientes_list
      tags:
      - pacientes
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paciente'
          description: ''
    post:
      operationId: pacientes_create
      tags:
      - pacientes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Paciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
  /pacientes/{id}/:
    get:
      operationId: pacientes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - pacientes
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    put:
      operationId: pacientes_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - pacientes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Paciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    patch:
      operationId: pacientes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - pacientes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    delete:
      operationId: pacientes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - pacientes
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /select-values/{selecttype}/:
    get:
      operationId: select_values_retrieve
      parameters:
      - in: path
        name: selecttype
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - select-values
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /select/pacientes/:
    get:
      operationId: select_pacientes_list
      tags:
      - select
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paciente'
          description: ''
    post:
      operationId: select_pacientes_create
      tags:
      - select
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Paciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
  /select/pacientes/{id}/:
    get:
      operationId: select_pacientes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - select
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    put:
      operationId: select_pacientes_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - select
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Paciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    patch:
      operationId: select_pacientes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - select
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaciente'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
          description: ''
    delete:
      operationId: select_pacientes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this paciente.
        required: true
      tags:
      - select
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /select/select-values/{selecttype}/:
    get:
      operationId: select_select_values_retrieve
      parameters:
      - in: path
        name: selecttype
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - select
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /select/solicitacoes/:
    get:
      operationId: select_solicitacoes_list
      tags:
      - select
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
    post:
      operationId: select_solicitacoes_create
      tags:
      - select
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
  /select/solicitacoes/{id}/:
    get:
      operationId: select_solicitacoes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this solicitacao atendimento.
        required: true
      tags:
      - select
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
  /solicitacoes/:
    get:
      operationId: solicitacoes_list
      tags:
      - solicitacoes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
    post:
      operationId: solicitacoes_create
      tags:
      - solicitacoes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SolicitacaoAtendimento'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
  /solicitacoes/{id}/:
    get:
      operationId: solicitacoes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this solicitacao atendimento.
        required: true
      tags:
      - solicitacoes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolicitacaoAtendimento'
          description: ''
components:
  schemas:
    AlergiaValue:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 256
      required:
      - name
    Email:
      type: object
      properties:
        email:
          type: string
          maxLength: 256
      required:
      - email
    Endereco:
      type: object
      properties:
        cep:
          type: string
          maxLength: 8
          minLength: 8
        estado:
          type: string
          maxLength: 100
        cidade:
          type: string
          maxLength: 64
        bairro:
          type: string
          maxLength: 100
        tipo_logradouro:
          $ref: '#/components/schemas/TipoLogradouroEnum'
        logradouro:
          type: string
          maxLength: 100
        numero:
          type: string
          maxLength: 5
        complemento:
          type: string
          maxLength: 100
      required:
      - bairro
      - cep
      - cidade
      - complemento
      - estado
      - logradouro
      - numero
    GeneroValue:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 256
      required:
      - name
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    NumeroDeTelefone:
      type: object
      properties:
        rotulo:
          type: string
          maxLength: 16
        ddd:
          type: string
          maxLength: 15
        telefone:
          type: string
          maxLength: 16
        whatsapp:
          type: boolean
        telegram:
          type: boolean
        ligacao:
          type: boolean
      required:
      - ddd
      - ligacao
      - rotulo
      - telefone
      - telegram
      - whatsapp
    OrientacaoSexualValue:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 256
      required:
      - name
    Paciente:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        nome:
          type: string
          maxLength: 128
        pseudonimo:
          type: string
          maxLength: 128
        data_nascimento:
          type: string
          format: date
        generos:
          type: array
          items:
            $ref: '#/components/schemas/GeneroValue'
          writeOnly: true
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          writeOnly: true
        orientacoes_sexuais:
          type: array
          items:
            $ref: '#/components/schemas/OrientacaoSexualValue'
          writeOnly: true
        religioes:
          type: array
          items:
            $ref: '#/components/schemas/ReligiaoValue'
          writeOnly: true
        alergias:
          type: array
          items:
            $ref: '#/components/schemas/AlergiaValue'
          writeOnly: true
        endereco:
          allOf:
          - $ref: '#/components/schemas/Endereco'
          writeOnly: true
        telefones:
          type: array
          items:
            $ref: '#/components/schemas/NumeroDeTelefone'
          writeOnly: true
        ja_fez_psicoterapia:
          type: boolean
        ja_fez_psiquiatrico:
          type: boolean
        ja_fez_tratamento_espirita:
          type: boolean
      required:
      - alergias
      - data_nascimento
      - generos
      - id
      - ja_fez_psicoterapia
      - ja_fez_psiquiatrico
      - ja_fez_tratamento_espirita
      - nome
      - orientacoes_sexuais
      - pseudonimo
      - religioes
    PatchedPaciente:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        nome:
          type: string
          maxLength: 128
        pseudonimo:
          type: string
          maxLength: 128
        data_nascimento:
          type: string
          format: date
        generos:
          type: array
          items:
            $ref: '#/components/schemas/GeneroValue'
          writeOnly: true
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          writeOnly: true
        orientacoes_sexuais:
          type: array
          items:
            $ref: '#/components/schemas/OrientacaoSexualValue'
          writeOnly: true
        religioes:
          type: array
          items:
            $ref: '#/components/schemas/ReligiaoValue'
          writeOnly: true
        alergias:
          type: array
          items:
            $ref: '#/components/schemas/AlergiaValue'
          writeOnly: true
        endereco:
          allOf:
          - $ref: '#/components/schemas/Endereco'
          writeOnly: true
        telefones:
          type: array
          items:
            $ref: '#/components/schemas/NumeroDeTelefone'
          writeOnly: true
        ja_fez_psicoterapia:
          type: boolean
        ja_fez_psiquiatrico:
          type: boolean
        ja_fez_tratamento_espirita:
          type: boolean
    ReligiaoValue:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 256
      required:
      - name
    SolicitacaoAtendimento:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        descricao:
          type: string
        paciente:
          type: string
          format: uuid
        sintomas:
          type: array
          items:
            type: integer
        tratamentos_em_andamento:
          type: array
          items:
            type: integer
      required:
      - descricao
      - id
      - paciente
    TipoLogradouroEnum:
      enum:
      - NDA
      - OUT
      - RUA
      - AV
      - TRA
      - ROD
      - AL
      - PRA
      - EST
      - VL
      - LRG
      - BC
      - QD
      - CON
      - ST
      - FZ
      - LT
      - PQ
      type: string
      description: |-
        * `NDA` - Não se aplica
        * `OUT` - Outro
        * `RUA` - Rua
        * `AV` - Avenida
        * `TRA` - Travessa
        * `ROD` - Rodovia
        * `AL` - Alameda
        * `PRA` - Praça
        * `EST` - Estrada
        * `VL` - Viela
        * `LRG` - Largo
        * `BC` - Beco
        * `QD` - Quadra
        * `CON` - Condomínio
        * `ST` - Sítio
        * `FZ` - Fazenda
        * `LT` - Loteamento
        * `PQ` - Parque
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
